import re
import os
import asyncio
import nest_asyncio
import time
import discord

from discord.ext import commands
from telegram import Bot, Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

TELEGRAM_VIP_CHAT_ID = -1002400049940
CHAT_CHANNEL_ID = 1097643848584396912
VIP_ROLE_ID = 1223269478310084708
VIP_CHANNEL_ID = 1251238756435099750
DISCORD_GUILD_ID = 1097643847774908526

tokens = {}

script_dir = os.path.dirname(os.path.abspath(__file__))
tokens_path = os.path.join(script_dir, "tokens.ini")

with open(tokens_path) as f:
    for line in f:
        if "=" in line:
            key, value = line.strip().split("=", 1)
            tokens[key.strip()] = value.strip()

DISCORD_BOT_TOKEN = tokens.get("DISCORD_BOT_TOKEN")
TG_BOT_TOKEN = tokens.get("TG_BOT_TOKEN")


# Telegram bot setup
def is_admin(username):
    return username == 'mtg_mods'

async def give_vip_role_in_ds(user, upd):
    guild = bot.get_guild(DISCORD_GUILD_ID)
    member = None 
    member = discord.utils.get(guild.members, id=int(user)) if user.isdigit() else discord.utils.get(guild.members, name=user)

    if member:
        role = guild.get_role(VIP_ROLE_ID)
        await member.add_roles(role)
        print(f"VIP —Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.name}.")
        embed = discord.Embed(
            title='‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ VIP ‚úÖ',
            description=(
                f'ü•≥ –¢–µ–ø–µ—Ä—å –≤—ã - {role.mention}!\n\n'
                f'üíé VIP —Å–∫—Ä–∏–ø—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ <#{VIP_CHANNEL_ID}> (–∑–∞–∫—Ä–µ–ø)\n\n'
                f'‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É VIP –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É!'
            ),
            color=0x3498DB
        )
        if member.display_avatar:
            embed.set_thumbnail(url=member.display_avatar.url)
        message = await bot.get_channel(CHAT_CHANNEL_ID).send(content=f'{member.mention}', embed=embed)
        await upd.message.reply_text((f"‚úÖ VIP —Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.name}!\n\n‚úÖ –¢–∞–∫-–∂–µ {member.name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ <a href='{message.jump_url}'>–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π</a>."), parse_mode="HTML", disable_web_page_preview=True)
    else:
        await upd.message.reply_text(("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID/USERNAME –Ω–µ –Ω–∞–π–¥–µ–Ω!\n‚ö°–°–Ω–∞—á–∞–ª–æ –∑–∞–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à <a href='https://discord.gg/qBPEYjfNhv'>Discord —Å–µ—Ä–≤–µ—Ä</a>."), parse_mode="HTML", disable_web_page_preview=True)

async def send_payment_info(update: Update, payment_method: str):
    payment_texts = {
        "visa": (
            f"<b>üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É VISA –ø–æ –Ω–æ–º–µ—Ä—É:</b>\n"
            f"<pre>4441 1144 6426 8265</pre>\n\n"

            f"üåç <b>–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥:</b>\n"
            f"üîπ <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å: Marher Bohdan</b>\n"
            f"üîπ <b>–í–∞–ª—é—Ç–∞: –ª—é–±–∞—è –∫—Ä–æ–º–µ RUB / BYN</b>\n"
            f"üîπ <b>–°—Ç—Ä–∞–Ω–∞: –£–∫—Ä–∞–∏–Ω–∞ üá∫üá¶</b>\n"
            f"üîπ <b>–ë–∞–Ω–∫: Monobank</b>\n\n"

            f"üì© <b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø–∏—à–∏—Ç–µ</b> <a href='https://t.me/mtg_mods'>MTG MODS –≤ –õ–°</a>.\n\n"

            f"üí≥ <b>–¢–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ SWIFT / SEPA, —Å–≤—è–∂–∏—Ç–µ—Å—å.</b>"
            
        ),
        "funpay": (
            f"<b>üíµ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ FunPay:</b>\n"
            f"üîó <a href='https://funpay.com/lots/offer?id=37093025'>–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É</a>\n\n"
            f"‚úÖ <b>–ü—Ä–æ—Å—Ç–æ –æ–ø–ª–∞—á–∏–≤–∞–π—Ç–µ (üí≥/–°–ë–ü QR)</b>\n"
            f"‚ùå <b>–í —á–∞—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ!</b>\n\n"
            f"üì© <b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø–∏—à–∏—Ç–µ</b> <a href='https://t.me/mtg_mods'>MTG MODS –≤ –õ–°</a>."
        ),
        "stars": (
            f"‚ú® <b>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars!</b> ‚ú®\n\n"
            f"üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å: 350 ‚≠ê</b>\n"
            f"üëâ <b>–ü–æ—Å—Ç–∞–≤—å—Ç–µ ‚≠ê –Ω–∞ –ª—é–±–æ–π –ø–æ—Å—Ç –≤</b> <a href='https://t.me/mtgmods'>–Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ</a>\n\n"
            f"üì© <b>–ó–∞—Ç–µ–º –Ω–∞–ø–∏—à–∏—Ç–µ</b> <a href='https://t.me/mtg_mods'>MTG MODS –≤ –õ–°</a> –∏ –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞."
        ),
        "crypto": (
            f"ü™ô <b>–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π:</b>\n\n"
            f"üì© <b>–ù–∞–ø–∏—à–∏—Ç–µ</b> <a href='https://t.me/mtg_mods'>MTG MODS –≤ –õ–°</a> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞."
        ),
        "paypal": (
            f"üí≤ <b>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ PayPal:</b>\n"
            f"üîó <a href='https://www.paypal.com/donate/?hosted_button_id=CC97BWMY8FFT8'>–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É</a>\n\n"
            f"üì© <b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø–∏—à–∏—Ç–µ</b> <a href='https://t.me/mtg_mods'>MTG MODS –≤ –õ–°</a>."
        )
    }

    text = payment_texts.get(payment_method, "ü§î")
    await update.message.reply_text(text, parse_mode="HTML", disable_web_page_preview=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ['üíé –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ —Ü–µ–Ω–∞ VIP üíé'],
        ['üíµ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ VIP üíµ'],
        ['‚ÑπÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ VIP ‚ÑπÔ∏è']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {update.effective_user.name}!\n\n"
        f"ü§ñ –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ —Å–∫—Ä–∏–ø—Ç–µ—Ä–∞ MTG MODS.\n\n"
        f"‚ÑπÔ∏è –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø—Ä–æ VIP –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –µ—ë!",
        reply_markup=reply_markup
    )

    user_command = context.args
    if user_command:
        await send_payment_info(update, user_command[0])

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == 'üíé –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ —Ü–µ–Ω–∞ VIP üíé':
        await update.message.reply_text(
            (
                f"üî• <b>VIP –ù–ê–í–°–ï–ì–î–ê ‚Äì –Ω–∏–∫–∞–∫–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –¥–æ–ø–ª–∞—Ç!</b>\n\n"

                f"üöÄ <u><b>–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏:</b></u>\n"
                f"‚úÖ <b>–í–µ—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–æ–∏–º –ø–ª–∞—Ç–Ω—ã–º —Å–∫—Ä–∏–ø—Ç–∞–º.</b>\n"
                f"‚úÖ <b>–í—Ö–æ–¥ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π VIP-—á–∞—Ç (Telegram/Discord).</b>\n"
                f"‚úÖ <b>–†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤.</b>\n"
                f"‚úÖ <b>–û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –≤ –ª–∞—É–Ω—á–µ—Ä–µ MonetLoader.</b>\n"
                f"‚úÖ <b>–í—ã–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö –±–ª–∞–≥–æ–¥–∞—Ä—è VIP-—Ä–æ–ª–∏ –≤ Discord.</b>\n\n"

                f"üí∞<u><b>–¶–µ–Ω–∞ –≤—Å–µ–≥–æ $5 (–≤ –ª—é–±–æ–π –≤–∞–ª—é—Ç–µ) ‚Äì –∫–∞–∫ –æ–¥–Ω–∞ –ø–∏—Ü—Ü–∞! üçï</b></u>\n"
                f"üî•–î–µ—à–µ–≤–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ TG Prem / DS Nitro, –Ω–æ –ù–ê–í–°–ï–ì–î–ê üî•\n"
                f"‚óè 20 BYN / 200 UAH / 500 RUB / 2500 KZT / 65K UZS –∏ —Ç.–¥."
            ),
            parse_mode="HTML"
        )
    elif text == '‚ÑπÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ VIP ‚ÑπÔ∏è':
        guild = bot.get_guild(DISCORD_GUILD_ID) 
        role = guild.get_role(VIP_ROLE_ID)
        all_members = guild.members
        total_members = len(all_members)
        vip_members = [m for m in all_members if role in m.roles]
        vip_count_discord = len(vip_members)
        tg_vipchat_members_count = await get_tg_vipchat_members_count(context.bot, TELEGRAM_VIP_CHAT_ID) - 2
        total_vip_members = vip_count_discord + tg_vipchat_members_count
        await update.message.reply_text(
            (
                f"‚ú® <b>–ù–∞—à VIP-—á–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ –≤ Telegram, —Ç–∞–∫ –∏ –≤ Discord!</b> ‚ú®\n"
                f"üîπ <i>–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –æ–±–æ–∏—Ö –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–¥–æ–±–Ω–µ–µ.</i>\n\n"
                
                f"üë• <b>–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ VIP-—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b>\n"
                f"1Ô∏è‚É£ <b><a href='https://discord.gg/qBPEYjfNhv'>Discord —Å–µ—Ä–≤–µ—Ä</a></b>: {vip_count_discord} –∏–∑ {total_members} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–º–µ—é—Ç VIP-—Ä–æ–ª—å.\n"
                f"2Ô∏è‚É£ <b>VIP-—á–∞—Ç –≤ Telegram</b>: {tg_vipchat_members_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n\n"
                
                f"üèÜ <i>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —ç–ª–∏—Ç–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</i>"
            ),
            parse_mode="HTML",
            disable_web_page_preview=True
        )
    elif text == 'üíµ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ VIP üíµ':
        await update.message.reply_text(
            f"<b>üìå –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b>",
            parse_mode="HTML",
            reply_markup=ReplyKeyboardMarkup(
                [
                    ['üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É VISA'],
                    ['üíµ FunPay (RUB/BYN)', 'üí≤ PayPal (USD/EUR)'],
                    ['‚≠ê Telegram Stars', 'ü™ô –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞'],
                    ['üîô –ù–∞–∑–∞–¥']
                ],
                resize_keyboard=True
            )
        )
    elif text == 'üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É VISA':
        await send_payment_info(update, "visa")
    elif text == 'üíµ FunPay (RUB/BYN)':
        await send_payment_info(update, "funpay")
    elif text == 'üí≤ PayPal (USD/EUR)':
        await send_payment_info(update, "paypal")
    elif text == '‚≠ê Telegram Stars':
        await send_payment_info(update, "stars")
    elif text == 'ü™ô –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞':
        await send_payment_info(update, "crypto")
    elif text == 'üîô –ù–∞–∑–∞–¥':
        await start(update, context)
    elif text == 'fp':
        await update.message.reply_text(
            f"<b>‚ÑπÔ∏è –ü–æ—Å–∫–æ–ª—å–∫—É –≤—ã –ø–æ–∫—É–ø–∞–ª–∏ VIP —á–µ—Ä–µ–∑ FunPay, –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û:</b>\n\n"
            f"<b>‚ö°–ó–∞–π–¥–∏—Ç–µ –Ω–∞ <a href='https://funpay.com/orders/'>—Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∫—É–ø–æ–∫</a>.</b>\n"
            f"<b>‚ö°–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫—É–ø–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ \"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ\".</b>\n\n"
            f"<b>‚úÖ –≠—Ç–æ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã —è –ø–æ–ª—É—á–∏–ª –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –∑–∞ –ø–æ–∫—É–ø–∫—É VIP!</b>",
            parse_mode="HTML", disable_web_page_preview=True
        )
    elif is_admin(update.message.from_user.username) and not re.search(r'@', text) and not re.search(r'[–∞-—è–ê-–Ø—ë–Å]', text):
        await give_vip_role_in_ds(text, update)
    elif is_admin(update.message.from_user.username) and not re.search(r'[–∞-—è–ê-–Ø—ë–Å]', text):
        invite_link = await generate_single_user_invite_link(context.bot, TELEGRAM_VIP_CHAT_ID)
        if invite_link:
            await update.message.reply_text(
                f'‚úÖ <b>–£—Å–ø–µ—à–Ω–æ–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ VIP</b> ‚úÖ\n\n'
                f'ü•≥ <b>{text}</b>, —Ç–µ–ø–µ—Ä—å –≤—ã - <b>VIP —É—á–∞—Å—Ç–Ω–∏–∫!</b>\n\n'
                f'üíé <b>VIP —Å–∫—Ä–∏–ø—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ <a href="{invite_link}">—ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ</a> (–∑–∞–∫—Ä–µ–ø)</b>\n\n'
                f'‚ù§Ô∏è <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É VIP –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É!</b>',
                parse_mode="HTML"
            )
        else:
            await update.message.reply_text("‚ùó–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ TG VIP —á–∞—Ç!\n\nüëâ –°–≤—è–∂–∏—Ç–µ—Å—å —Å @mtg_mods.")

async def get_tg_vipchat_members_count(bot, chat_id: int):
    return await bot.get_chat_member_count(chat_id)

async def generate_single_user_invite_link(bot: Bot, chat_id: int):
    try:
        expire_time = int(time.time()) + 3600
        invite_link = await bot.create_chat_invite_link(
            chat_id=chat_id,
            member_limit=1,
            expire_date=expire_time
        )
        print(f"–°—Å—ã–ª–∫–∞ –Ω–∞ TG VIP —á–∞—Ç —Å–æ–∑–¥–∞–Ω–∞: {invite_link.invite_link}")
        return invite_link.invite_link
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–≥ –≤–∏–ø —á–∞—Ç: {e}")
        return None

async def run_telegram_bot():
    app = ApplicationBuilder().token(TG_BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    await app.run_polling()

# Discord bot setup
bot = commands.Bot(command_prefix="/", intents=intents)
@bot.event
async def on_ready():
    print(f'Discord bot –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}')
    try:
        await bot.tree.sync() 
        print("–ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–æ–≤–∞–Ω—ã.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

@bot.tree.command(name="vip", description="–í—ã–¥–∞—Ç—å VIP —Ä–æ–ª—å")
async def vip(interaction: discord.Interaction, member: discord.Member):
    role = interaction.guild.get_role(VIP_ROLE_ID)
    await member.add_roles(role)
    print(f"VIP —Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.name}")
    embed = discord.Embed(
        title='‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ VIP —Ä–æ–ª–∏ ‚úÖ',
        description=(
            f'ü•≥ –¢–µ–ø–µ—Ä—å –≤—ã - {role.mention}!\n\n'
            f'üíé VIP —Å–∫—Ä–∏–ø—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ <#{VIP_CHANNEL_ID}> (–∑–∞–∫—Ä–µ–ø)\n\n'
            f'‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É VIP –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É!'
        ),
        color=0x3498DB
    )
    if member.avatar:
        embed.set_thumbnail(url=member.avatar.url)
    await interaction.response.send_message(content=f'{member.mention}', embed=embed)

@bot.tree.command(name="vips", description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–∫—É–ø–æ–∫ VIP")
async def vips(interaction: discord.Interaction):
    role = interaction.guild.get_role(VIP_ROLE_ID)
    all_members = interaction.guild.members
    total_members = len(all_members)
    vip_members = [m for m in all_members if role in m.roles]
    vip_count = len(vip_members)
    embed = discord.Embed(
        description=(
            f'**:sunglasses: {vip_count} –∏–∑ {total_members} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ - <@&{VIP_ROLE_ID}>**'
        ),
        color=0x3498DB
    )
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="tgvip", description="–í—Å—Ç—É–ø–∏—Ç—å –≤ VIP —á–∞—Ç –≤ Telegram")
async def tgvip(interaction: discord.Interaction):
    member = interaction.user
    role = discord.utils.get(member.roles, id=VIP_ROLE_ID)
    if not role:
        embed = discord.Embed(
            description=(f"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è <@&{VIP_ROLE_ID}>!"),
            color=0x3498DB
        )
        await interaction.response.send_message(embed=embed)
        return
    elif interaction.channel.id != VIP_CHANNEL_ID:
        embed = discord.Embed(
            description=(f"–î–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ <#{VIP_CHANNEL_ID}>"),
            color=0x3498DB
        )
        await interaction.response.send_message(embed=embed)
        return
    elif role and interaction.channel.id == VIP_CHANNEL_ID:
        app = ApplicationBuilder().token(TG_BOT_TOKEN).build()
        print('–ó–∞–ø—Ä–æ—Å TG —Å—Å—ã–ª–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + member.mention)
        invite_link = await generate_single_user_invite_link(app.bot, TELEGRAM_VIP_CHAT_ID)
        if invite_link:
            embed = discord.Embed(
            description=(
                f"**{member.mention}, –Ω–∞—à Telegram VIP —á–∞—Ç –ø–æ c—Å—ã–ª–∫–µ:\n{invite_link}** *(–¥–µ–π—Å—Ç–≤—É–µ—Ç 60 –º–∏–Ω—É—Ç)*"
            ),
            color=0x3498DB
        )
        else:
            embed = discord.Embed(
            description=(
                f"–û—à–∏–±–∫–∞, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ Telegram VIP —á–∞—Ç!"
            ),
            color=0x3498DB
        )
        await interaction.response.send_message(embed=embed)

async def run_discord_bot():
    await bot.start(DISCORD_BOT_TOKEN)

# Start bots
if __name__ == '__main__':
    nest_asyncio.apply()
    asyncio.run(asyncio.gather(run_discord_bot(), run_telegram_bot()))